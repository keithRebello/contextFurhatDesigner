plugins {
    id "org.jetbrains.kotlin.jvm" version "1.8.21"
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'java'
apply plugin: 'kotlin'

//Defines what version of Java to use.
sourceCompatibility = 1.8

//Defines how Kotlin should compile.
compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        //Defines what jvm bytecode to use, 1.8 rather than 1.6
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

//Defines how Kotlin should compile when testingTry to keep it the same as compileKotlin.
compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        //Defines what jvm bytecode to use, 1.8 rather than 1.6
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
//    maven { url "https://s3-eu-west-1.amazonaws.com/furhat-maven/snapshots"}
    maven { url "https://s3-eu-west-1.amazonaws.com/furhat-maven/releases"}  // Replace "releases" with "snapshots" if testing
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    jcenter()
}

version = "1.0.0"

ext.ktor_version = '2.3.1'
dependencies {
    implementation 'com.furhatrobotics.furhatos:furhat-commons:2.7.0'
    implementation "io.ktor:ktor-server-html-builder:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation 'com.furhatrobotics.assets:StandardLibraryCollection:1.1.3'
    implementation 'org.jetbrains.exposed:exposed-core:0.37.3'
    implementation 'org.jetbrains.exposed:exposed-dao:0.37.3'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.37.3'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
}

jar {
    def lowerCasedName = baseName.toLowerCase()
    def normalizedName = lowerCasedName.substring(0, 1).toUpperCase() + lowerCasedName.substring(1)
    manifest.attributes(
            'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
            'Main-Class': "furhatos.app.${lowerCasedName}.${normalizedName}Skill"
    )
}

//ShadowJar depends on jar being finished properly.
shadowJar {
    manifest {
        exclude '**/Log4j2Plugins.dat'
        exclude '**/node_modules'
    }
    from "skill.properties"
    from "assets"
    extension 'skill'
    Properties properties = new Properties()
    properties.load(project.file('skill.properties').newDataInputStream())
    def version = properties.getProperty('version')
    def name = properties.getProperty('name')
    archiveName = "${name}_${version}.skill"
}
